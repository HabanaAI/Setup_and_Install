# Copyright (c) 2024 Habana Labs, Ltd.
#
# SPDX-License-Identifier: Apache-2.0
#
# HabanaLabs Dockerfile base installer layer for Tencentos 3.1
FROM tencentos/tencentos_server31_mini:20230630
ARG ARTIFACTORY_URL
ARG VERSION
ARG REVISION

LABEL vendor="Habanalabs Ltd."
LABEL release="${VERSION}-${REVISION}"

COPY LICENSE /licenses/
RUN dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm && \
    dnf clean all && rm -rf /var/cache/yum

RUN dnf install -y \
        python3-dnf-plugin-versionlock && \
    dnf versionlock add tencentos-release* && \
    dnf clean all

RUN dnf update -y && dnf install -y \
        clang \
        cmake3 \
        cpp \
        gcc \
        gcc-c++ \
        git \
        glibc \
        glibc-devel \
        glibc-headers \
        iproute \
        jemalloc \
        libarchive \
        libjpeg-devel \
        libksba \
        llvm \
        lsof \
        mesa-libGL \
        openssh-clients \
        openssh-server \
        redhat-lsb-core \
        unzip \
        wget && \
    dnf clean all && \
    rm -f /etc/ssh/ssh_host_*_key*

COPY install-python310.sh .
RUN ./install-python310.sh tencentos3.1 && rm -f install-python310.sh
RUN echo "/usr/local/lib" > /etc/ld.so.conf.d/python.conf && ldconfig
ENV LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH

ENV PIP_DISABLE_PIP_VERSION_CHECK=1
ENV PIP_NO_CACHE_DIR=on

RUN wget https://bootstrap.pypa.io/get-pip.py && \
    python3 get-pip.py && \
    rm -f get-pip.py && \
    python3 -m pip install setuptools==79.0.1 wheel && \
    python3 -m pip install --upgrade Jinja2 protobuf requests urllib3

COPY install_efa.sh .
COPY tencentos_efa_patch.txt /tmp/tencentos_efa_patch.txt
RUN ./install_efa.sh && rm -f install_efa.sh /tmp/tencentos_efa_patch.txt /etc/ld.so.conf.d/efa.conf /etc/profile.d/efa.sh

ENV MPI_ROOT=/usr/mpi/gcc/openmpi-4.1.5a1
ENV LD_LIBRARY_PATH=${MPI_ROOT}/lib64:/usr/lib/habanalabs:$LD_LIBRARY_PATH
ENV PATH=${MPI_ROOT}/bin:$PATH
ENV OPAL_PREFIX=${MPI_ROOT}
ENV MPICC=${MPI_ROOT}/bin/mpicc
ENV RDMAV_FORK_SAFE=1
ENV FI_EFA_USE_DEVICE_RDMA=1

RUN echo "[habanalabs]" > /etc/yum.repos.d/habanalabs.repo && \
    echo "name=Habana TC31 Linux repo" >> /etc/yum.repos.d/habanalabs.repo && \
    echo "baseurl=https://${ARTIFACTORY_URL}/artifactory/tencentos/3/3.1" >> /etc/yum.repos.d/habanalabs.repo && \
    echo "gpgkey=https://${ARTIFACTORY_URL}/artifactory/tencentos/3/3.1/repodata/repomd.xml.key" >> /etc/yum.repos.d/habanalabs.repo

RUN _GPG_TEMP=$(mktemp -d) && \
    wget -q -O "${_GPG_TEMP}/habana_pubkey" "https://${ARTIFACTORY_URL}/artifactory/gaudi-general/keyPairs/primary/public" && rpm --import "${_GPG_TEMP}/habana_pubkey" && \
    rm -rf "${_GPG_TEMP}"

RUN dnf install -y \
        habanalabs-rdma-core-"$VERSION"-"$REVISION".tl3 \
        habanalabs-thunk-"$VERSION"-"$REVISION".tl3 \
        habanalabs-firmware-tools-"$VERSION"-"$REVISION".tl3 \
        habanalabs-graph-"$VERSION"-"$REVISION".tl3 && \
    rm -f /etc/yum.repos.d/habanalabs.repo && \
    dnf clean all

RUN alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.10 4 && \
    alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 3 && \
    alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 2 && \
    alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1 && \
    alternatives --install /usr/bin/unversioned-python unversioned-python /usr/bin/python3 10 && \
    alternatives --install /usr/bin/python3-config python3-config /usr/local/bin/python3.10-config 1 && \
    alternatives --set python3 /usr/local/bin/python3.10 && \
    alternatives --set python3-config /usr/local/bin/python3.10-config && \
    alternatives --set unversioned-python /usr/bin/python3 && \
    export PATH="/usr/local/bin:$PATH" && \
    if [ ! -L /usr/bin/python ] || [ "$(readlink /usr/bin/python)" != "/etc/alternatives/unversioned-python" ]; then \
        rm -f /usr/bin/python; \
        ln -s /etc/alternatives/unversioned-python /usr/bin/python; \
    fi

ENV RDMA_CORE_ROOT=/opt/habanalabs/rdma-core/src
ENV RDMA_CORE_LIB=${RDMA_CORE_ROOT}/build/lib

RUN alternatives --set python /usr/bin/python3

RUN python3 -m pip install habana_media_loader=="${VERSION}"."${REVISION}"

# SSH configuration necessary to support mpi-operator v2
RUN mkdir -p /var/run/sshd && \
    sed -i 's/[ #]\(.*StrictHostKeyChecking \).*/ \1no/g' /etc/ssh/ssh_config && \
    sed -i 's/#\(ForwardAgent \).*/\1yes/g' /etc/ssh/ssh_config && \
    echo "    UserKnownHostsFile /dev/null" >> /etc/ssh/ssh_config && \
    sed -i 's/#\(StrictModes \).*/\1no/g' /etc/ssh/sshd_config && \
    mkdir -p /var/run/sshd && echo "/usr/sbin/sshd -p 3022" | tee -a ~/.bashrc

ENV GC_KERNEL_PATH=/usr/lib/habanalabs/libtpc_kernels.so
ENV HABANA_LOGS=/var/log/habana_logs/
ENV HABANA_SCAL_BIN_PATH=/opt/habanalabs/engines_fw
ENV HABANA_PLUGINS_LIB_PATH=/opt/habanalabs/habana_plugins