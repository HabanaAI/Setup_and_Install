# Copyright (c) 2023 Habana Labs, Ltd.
#
# SPDX-License-Identifier: Apache-2.0
#
# HabanaLabs Dockerfile base installer layer for RedHat 8.6
FROM registry.access.redhat.com/ubi8/ubi:8.6
ARG ARTIFACTORY_URL
ARG VERSION
ARG REVISION

LABEL vendor="Habanalabs Ltd."
LABEL release="${VERSION}-${REVISION}"

COPY LICENSE /licenses/

RUN dnf install -y \
        python3-dnf-plugin-versionlock && \
    dnf versionlock add redhat-release* && \
    dnf clean all

RUN dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm && \
    dnf clean all

RUN echo "[BaseOS]" > /etc/yum.repos.d/CentOS-Linux-BaseOS.repo && \
    echo "name=CentOS Linux 8 - BaseOS" >> /etc/yum.repos.d/CentOS-Linux-BaseOS.repo && \
    echo "baseurl=https://vault.centos.org/8-stream/BaseOS/x86_64/os" >> /etc/yum.repos.d/CentOS-Linux-BaseOS.repo && \
    echo "gpgkey=https://www.centos.org/keys/RPM-GPG-KEY-CentOS-Official-SHA256" >> /etc/yum.repos.d/CentOS-Linux-BaseOS.repo && \
    echo "gpgcheck=1" >> /etc/yum.repos.d/CentOS-Linux-BaseOS.repo

RUN dnf update -y && dnf install -y \
        bzip2 \
        bzip2-devel \
        clang \
        cmake3 \
        cpp \
        gcc \
        gcc-c++ \
        git \
        glibc \
        glibc-devel \
        glibc-headers \
        iproute \
        jemalloc \
        libarchive \
        libjpeg-devel \
        libksba \
        llvm \
        lsof \
        mesa-libGL \
        openssh-clients \
        openssh-server \
        python3.11-devel \
        python3.11-pip \
        redhat-lsb-core \
        unzip \
        wget && \
    dnf clean all && \
    rm -f /etc/ssh/ssh_host_*_key*

# CVE-2023-47038 RHSA-2024:3128
RUN dnf module reset -y perl && \
    dnf module enable -y perl:5.32 && \
    dnf module install -y --allowerasing perl:5.32 && \
    dnf clean all

RUN echo "[appstream]" > /etc/yum.repos.d/CentOS-Linux-AppStream.repo && \
    echo "name=CentOS Linux 8 - AppStream" >> /etc/yum.repos.d/CentOS-Linux-AppStream.repo && \
    echo "baseurl=https://vault.centos.org/8-stream/AppStream/x86_64/os" >> /etc/yum.repos.d/CentOS-Linux-AppStream.repo && \
    echo "gpgkey=https://www.centos.org/keys/RPM-GPG-KEY-CentOS-Official-SHA256" >> /etc/yum.repos.d/CentOS-Linux-AppStream.repo && \
    echo "gpgcheck=1" >> /etc/yum.repos.d/CentOS-Linux-AppStream.repo

COPY install_efa.sh .
RUN ./install_efa.sh && rm install_efa.sh && rm -f /etc/ld.so.conf.d/efa.conf /etc/profile.d/efa.sh
ENV OPENMPI_VERSION=4.1.6
ENV MPI_ROOT=/opt/habanalabs/openmpi
ENV LD_LIBRARY_PATH=${MPI_ROOT}/lib:/usr/lib/habanalabs:$LD_LIBRARY_PATH
ENV PATH=${MPI_ROOT}/bin:$PATH
ENV OPAL_PREFIX=${MPI_ROOT}
ENV MPICC=${MPI_ROOT}/bin/mpicc
ENV RDMAV_FORK_SAFE=1
ENV FI_EFA_USE_DEVICE_RDMA=0
ENV OMPI_MCA_btl=^openib

RUN echo "[habanalabs]" > /etc/yum.repos.d/habanalabs.repo && \
    echo "name=Habana RH8 Linux repo" >> /etc/yum.repos.d/habanalabs.repo && \
    echo "baseurl=https://${ARTIFACTORY_URL}/artifactory/rhel/8/8.6" >> /etc/yum.repos.d/habanalabs.repo && \
    echo "gpgkey=https://${ARTIFACTORY_URL}/artifactory/rhel/8/8.6/repodata/repomd.xml.key" >> /etc/yum.repos.d/habanalabs.repo

RUN echo "[powertools]" > /etc/yum.repos.d/powertools.repo && \
    echo "name=powertools" >> /etc/yum.repos.d/powertools.repo && \
    echo "baseurl=https://vault.centos.org/8-stream/PowerTools/x86_64/os/"  >> /etc/yum.repos.d/powertools.repo && \
    echo "gpgkey=https://www.centos.org/keys/RPM-GPG-KEY-CentOS-Official-SHA256" >> /etc/yum.repos.d/powertools.repo && \
    echo "gpgcheck=1" >> /etc/yum.repos.d/powertools.repo

ENV PYTHON_VERSION=3.11
RUN alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 2 && \
    alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1 && \
    alternatives --set python3 /usr/bin/python3.11

RUN dnf install -y \
        habanalabs-rdma-core-"$VERSION"-"$REVISION".el8 \
        habanalabs-thunk-"$VERSION"-"$REVISION".el8 \
        habanalabs-firmware-tools-"$VERSION"-"$REVISION".el8 \
        habanalabs-graph-"$VERSION"-"$REVISION".el8 && \
    dnf clean all && \
    rm -f /etc/yum.repos.d/habanalabs.repo

ENV PIP_DISABLE_PIP_VERSION_CHECK=1
ENV PIP_NO_CACHE_DIR=on
ENV RDMA_CORE_ROOT=/opt/habanalabs/rdma-core/src
ENV RDMA_CORE_LIB=${RDMA_CORE_ROOT}/build/lib

RUN wget -q -O /tmp/openmpi-${OPENMPI_VERSION}.tar.gz https://download.open-mpi.org/release/open-mpi/v4.1/openmpi-${OPENMPI_VERSION}.tar.gz && \
    tar -xzf /tmp/openmpi-${OPENMPI_VERSION}.tar.gz -C /tmp && \
    cd /tmp/openmpi-${OPENMPI_VERSION} && \
    ./configure --prefix=${MPI_ROOT} --with-verbs && \
    make -j$(nproc) && make install && cd / && rm -rf /tmp/openmpi-${OPENMPI_VERSION}.tar.gz /tmp/openmpi-${OPENMPI_VERSION}

RUN python3 -m pip install pip==24.2 setuptools==75.1.0 wheel==0.44.0

RUN python3 -m pip install habana_media_loader=="${VERSION}"."${REVISION}"

# SSH configuration necessary to support mpi-operator v2
RUN mkdir -p /var/run/sshd && \
    sed -i 's/[ #]\(.*StrictHostKeyChecking \).*/ \1no/g' /etc/ssh/ssh_config && \
    sed -i 's/#\(ForwardAgent \).*/\1yes/g' /etc/ssh/ssh_config && \
    echo "    UserKnownHostsFile /dev/null" >> /etc/ssh/ssh_config && \
    sed -i 's/#\(StrictModes \).*/\1no/g' /etc/ssh/sshd_config && \
    mkdir -p /var/run/sshd && echo "/usr/sbin/sshd -p 3022" | tee -a ~/.bashrc

ENV GC_KERNEL_PATH=/usr/lib/habanalabs/libtpc_kernels.so
ENV HABANA_LOGS=/var/log/habana_logs/
ENV HABANA_SCAL_BIN_PATH=/opt/habanalabs/engines_fw
ENV HABANA_PLUGINS_LIB_PATH=/opt/habanalabs/habana_plugins