# Copyright (c) 2024 HabanaLabs, Ltd.
#
# SPDX-License-Identifier: Apache-2.0
#
# HabanaLabs Dockerfile base installer layer for Ubuntu 24.04
FROM ubuntu:noble
ARG ARTIFACTORY_URL
ARG VERSION
ARG REVISION

ENV DEBIAN_FRONTEND=noninteractive
ENV GC_KERNEL_PATH=/usr/lib/habanalabs/libtpc_kernels.so
ENV HABANA_LOGS=/var/log/habana_logs/
ENV OS_NUMBER=2404
ENV HABANA_SCAL_BIN_PATH=/opt/habanalabs/engines_fw
ENV HABANA_PLUGINS_LIB_PATH=/opt/habanalabs/habana_plugins

RUN apt-get update && apt-get install -y --no-install-recommends \
        apt-transport-https \
        apt-utils \
        bc \
        build-essential \
        ca-certificates \
        dkms \
        ethtool \
        gcc \
        git \
        gnupg \
        gpg-agent \
        graphviz \
        libgl1 \
        libgnutls30 \
        libgoogle-glog0v6t64 \
        libjemalloc2 \
        libjpeg-dev \
        libkrb5-3 \
        libpq-dev \
        lsof \
        make \
        openssh-client \
        openssh-server \
        protobuf-compiler \
        python3 \
        python3-dev \
        unzip \
        vim \
        wget && \
    apt-get update && apt-get upgrade -y libtasn1-6 && \
    apt-get autoremove && rm -rf /var/lib/apt/lists/* && \
    rm -f /etc/ssh/ssh_host_*_key*

ENV PIP_DISABLE_PIP_VERSION_CHECK=1
ENV PIP_NO_CACHE_DIR=on

RUN mv /usr/lib/python3.12/EXTERNALLY-MANAGED /usr/lib/python3.12/EXTERNALLY-MANAGED.old && \
    wget https://bootstrap.pypa.io/get-pip.py && \
    python3 get-pip.py && \
    rm -f get-pip.py && \
    python3 -m pip install setuptools wheel && \
    python3 -m pip install --upgrade Jinja2

COPY install_efa.sh .
RUN ./install_efa.sh && rm -f install_efa.sh /etc/ld.so.conf.d/efa.conf /etc/profile.d/efa.sh

ENV MPI_ROOT=/opt/amazon/openmpi
ENV LD_LIBRARY_PATH=${MPI_ROOT}/lib:/usr/lib/habanalabs:$LD_LIBRARY_PATH
ENV PATH=${MPI_ROOT}/bin:$PATH
ENV OPAL_PREFIX=${MPI_ROOT}
ENV MPICC=${MPI_ROOT}/bin/mpicc
ENV RDMAV_FORK_SAFE=1
ENV FI_EFA_USE_DEVICE_RDMA=1
ENV RDMA_CORE_ROOT=/opt/habanalabs/rdma-core/src
ENV RDMA_CORE_LIB=${RDMA_CORE_ROOT}/build/lib

RUN wget -O- https://${ARTIFACTORY_URL}/artifactory/api/gpg/key/public | gpg --dearmor -o /usr/share/keyrings/habana-artifactory.gpg && \
    chown root:root /usr/share/keyrings/habana-artifactory.gpg && \
    chmod 644 /usr/share/keyrings/habana-artifactory.gpg  && \
    echo "deb [signed-by=/usr/share/keyrings/habana-artifactory.gpg] https://${ARTIFACTORY_URL}/artifactory/debian noble main" | tee -a /etc/apt/sources.list && \
    cp /etc/dpkg/dpkg.cfg.d/excludes /etc/dpkg/dpkg.cfg.d/excludes.bak && \
    sed -i '/path-exclude=\/usr\/share\/doc/d' /etc/dpkg/dpkg.cfg.d/excludes && \
    apt-get update && apt-get install -y --no-install-recommends \
        habanalabs-rdma-core="$VERSION"-"$REVISION" \
        habanalabs-thunk="$VERSION"-"$REVISION" \
        habanalabs-firmware-tools="$VERSION"-"$REVISION" \
        habanalabs-graph="$VERSION"-"$REVISION" && \
    apt-get autoremove && rm -rf /var/lib/apt/lists/* && \
    mv -f /etc/dpkg/dpkg.cfg.d/excludes.bak /etc/dpkg/dpkg.cfg.d/excludes && \
    sed -i "/$ARTIFACTORY_URL/d" /etc/apt/sources.list

RUN python3 -m pip install habana_media_loader=="${VERSION}"."${REVISION}"

# SSH configuration necessary to support mpi-operator v2
RUN mkdir -p /var/run/sshd && \
    sed -i 's/[ #]\(.*StrictHostKeyChecking \).*/ \1no/g' /etc/ssh/ssh_config && \
    sed -i 's/#\(ForwardAgent \).*/\1yes/g' /etc/ssh/ssh_config && \
    echo "    UserKnownHostsFile /dev/null" >> /etc/ssh/ssh_config && \
    sed -i 's/#\(StrictModes \).*/\1no/g' /etc/ssh/sshd_config && \
    echo "/etc/init.d/ssh start \"-p 3022\"" >> ~/.bashrc && \
    sed -i '/[ -z "$PS1" ] && return/s/^/#/g' ~/.bashrc