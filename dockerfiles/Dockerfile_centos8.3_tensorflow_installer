# Copyright (c) 2022 HabanaLabs, Ltd.
#
# SPDX-License-Identifier: Apache-2.0
#
# HabanaLabs Dockerfile Tensorflow installer layer for CentOS 8.3
ARG BASE_NAME
ARG VERSION
ARG REVISION
FROM ${BASE_NAME}:${VERSION}-${REVISION}
ARG VERSION
ARG REVISION
ARG TF_VERSION
ARG OPENMPI_VER=4.0.5
ARG ARTIFACTORY_URL
ARG HABANA_PIP_VERSION="21.1.1"

ENV TF_MODULES_RELEASE_BUILD=/usr/lib/habanalabs/
ENV PYTHONPATH=/root:/usr/lib/habanalabs/
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/openmpi/lib/
ENV PATH=$PATH:/usr/local/openmpi/bin/
ENV OPAL_PREFIX=/usr/local/openmpi/
ENV MPI_ROOT=/usr/local/openmpi/

# Install unzip to extract pre-trained weights for BERT demo
RUN dnf install -y unzip \
        openssh-clients \
        openssh-server \
        git \
        bc \
        mesa-libGL && \
    dnf clean all && rm -rf /var/cache/dnf

RUN dnf --enablerepo=powertools install -y protobuf-devel && \
    dnf clean all && rm -rf /var/cache/dnf

# Install OpenMpi from public sources - it must be installed before requirements,
# that has dependecy with mpi4py package
RUN wget --no-verbose https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-"${OPENMPI_VER}".tar.gz && \
    tar -xvf openmpi-"${OPENMPI_VER}".tar.gz && \
    cd openmpi-"${OPENMPI_VER}" && \
    ./configure --prefix="/usr/local/openmpi" && \
    make -j && \
    make install && \
    cp LICENSE /usr/local/openmpi && \
    cd - && \
    rm -rf openmpi-"${OPENMPI_VER}"* && \
    /sbin/ldconfig

ENV MPICC=/usr/local/openmpi/bin/mpicc

COPY requirements-no-deps-tensorflow-cpu-"$TF_VERSION".txt requirements-no-deps-tensorflow-cpu-"$TF_VERSION".txt

RUN python3 -m pip install pip=="${HABANA_PIP_VERSION}" && \
    pip3 install setuptools==41.0.0

RUN pip3 install tensorflow-cpu==${TF_VERSION} && \
    pip3 install --no-deps -r requirements-no-deps-tensorflow-cpu-"$TF_VERSION".txt && \
    rm requirements-no-deps-tensorflow-cpu-"$TF_VERSION".txt

# For AML/CentOS/RHEL OS'es TFIO_DATAPATH have to be specified to import tensorflow_io lib correctly
ENV TFIO_DATAPATH=/usr/local/lib64/python3.8/site-packages/

# For AML/CentOS/RHEL ca-cert file is expected exactly under /etc/ssl/certs/ca-certificates.crt
# otherwise curl will fail during access to S3 AWS storage
RUN ln -s /etc/ssl/certs/ca-bundle.crt /etc/ssl/certs/ca-certificates.crt

RUN python3 -m pip install habana-tensorflow=="${VERSION}"."${REVISION}" && \
    python3 -m pip install habana-horovod=="${VERSION}"."${REVISION}"

RUN /usr/bin/ssh-keygen -A && \
    echo "source /etc/profile.d/habanalabs.sh" >> ~/.bashrc && \
    echo "/usr/sbin/sshd -p 3022" >> ~/.bashrc